name: Build and Publish

env:
  REGISTRY: ghcr.io
  GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
  GITHUB_SHA: ${{ github.sha }}

on:
  push:
    branches: [ "master" ]
    tags:
      - '*'
  workflow_dispatch:

jobs:
  publish-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - package: main-sharder
            dockerfile: sharder/main.Dockerfile
          - package: whitelabel-sharder
            dockerfile: sharder/whitelabel.Dockerfile
          - package: http-gateway
            dockerfile: http-gateway/Dockerfile
          - package: premiumproxy
            dockerfile: patreon-proxy/Dockerfile
          - package: cache-sync-service
            dockerfile: cache-sync-service/Dockerfile
          - package: server-counter
            dockerfile: server-counter/Dockerfile
          - package: bot-list-updater
            dockerfile: bot-list-updater/Dockerfile
          - package: image-proxy
            dockerfile: image-proxy/Dockerfile
          - package: vote_listener
            dockerfile: vote_listener/Dockerfile
          - package: stats-channel-updater
            dockerfile: stats-channel-updater/Dockerfile
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Determine image tag
        id: determine-tag
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_type }}" == "tag" ]]; then
            TAG="${{ github.ref_name }}"
          else
            TAG="latest"
          fi
          echo "IMAGE_TAG=${TAG}" >> $GITHUB_ENV

      - name: Set image name
        run: |
          echo "IMAGE_NAME=${REGISTRY}/${GITHUB_REPOSITORY_OWNER,,}/${PACKAGE_NAME,,}" >> ${GITHUB_ENV}
        env:
          PACKAGE_NAME: ${{ matrix.package }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4

        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Log image name
        run: |
          echo "Image URI: ${IMAGE_NAME}"
